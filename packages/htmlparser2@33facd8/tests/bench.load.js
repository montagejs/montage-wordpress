montageDefine("33facd8","tests/bench",{dependencies:["ben","node-xml","libxmljs","sax","node-expat","htmlparser","../lib/Parser.js"],factory:function(r,e,n){function a(){var r=new h.SaxParser(function(r){});this.parse=function(e){r.parseString(e)}}function t(){var r=new l.SaxPushParser(function(r){});this.parse=function(e){r.push(e,!1)}}function s(){var r=v.parser();this.parse=function(e){r.write(e)}}function o(){var r=new x.Parser;this.parse=function(e){r.parse(e,!1)}}function i(){var r=new m.DefaultHandler,e=new m.Parser(r);this.parse=function(r){e.parseComplete(r)}}function c(){var r=new d;this.parse=function(e){r.write(e)}}var u=r("ben"),p=[];try{var h=r("node-xml");p.push([a,"node-xml"])}catch(f){}try{var l=r("libxmljs");p.push([t,"libxmljs"])}catch(f){}try{var v=r("sax");p.push([s,"sax"])}catch(f){}try{var x=r("node-expat");p.push([o,"node-expat"])}catch(f){}try{var m=r("htmlparser");p.push([i,"htmlparser"])}catch(f){}try{var d=r("../lib/Parser.js");p.push([c,"htmlparser2"])}catch(f){}var b=p.map(function(r){var e=new r[0],n=r[1];process.stdout.write(n+":"+Array(14-n.length).join(" ")),e.parse("<r>");var a=u(1e6,function(){e.parse("<foo bar='baz'>quux</foo>")});return console.log((a>.01?"":"0")+(1e3*a).toFixed(2),"ms/el"),[n,a]});console.log("\nWinner:",b.sort(function(r,e){return r[1]-e[1]})[0][0])}});